"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"rotaract-club-of-tcet","metadata":{"permalink":"/blog/rotaract-club-of-tcet","source":"@site/blog/2023-04-15-rcblog/index.md","title":"Rotaract Club of TCET","description":"About Rotaract Club of TCET","date":"2023-04-15T00:00:00.000Z","formattedDate":"April 15, 2023","tags":[{"label":"cultural","permalink":"/blog/tags/cultural"},{"label":"social","permalink":"/blog/tags/social"},{"label":"community","permalink":"/blog/tags/community"},{"label":"editorial","permalink":"/blog/tags/editorial"}],"readingTime":5.28,"hasTruncateMarker":false,"authors":[{"name":"Nikita Shukla","title":"Docs Team Member | Chairperson HRD @RCTCET","url":"https://github.com/NikitaSShukla","imageURL":"https://github.com/NikitaSShukla.png","key":"nikita"}],"frontMatter":{"slug":"rotaract-club-of-tcet","title":"Rotaract Club of TCET","authors":["nikita"],"tags":["cultural","social","community","editorial"],"description":"About Rotaract Club of TCET","keywords":["cultural","social","community","editorial"]},"nextItem":{"title":"Dive into Web Design \ud83d\udd8c\ufe0f | Learn the Mental Model for converting Designs into Code","permalink":"/blog/dive-into-web-design"}},"content":">Are you one of those engineers who are just engrossed in academics and is looking to do something more than that in your college days? Rotaract Club of TCET is one of the perfect choices to go for. I f you are searching to participate in something interesting where you can develop yourself and volunteer as well, you are at the correct place. To know more continue reading this blog.\\n\\n\\n\\n# **\u2018Boldly Going:** Rotaract Club of TCET \'\\n\\n\\n![RCTCET](RCTCET.png)\\n\\n\\n>_\\"The purpose of life is to live it, to taste experience to the utmost, to reach out eagerly and without fear for newer and richer experience.\\"_ \\n>\\n> _-Eleanor Roosevelt_\\n\\n\\nWhether you\'re a musician, artist, athlete, writer, or simply someone who loves trying new things, Rotaract Club of TCET offers a welcoming and inclusive community where you can connect with like-minded individuals and pursue your passions. From workshops and classes to group outings and events, RCTCET provides a variety of opportunities for personal growth, skill development, and social interaction. \\n\\n\\n# Types of Projects & Events conducted in RCTCET\\n\\n## 1. Promotes Volunteering\\nVolunteering in community service related projects or events can help you gain practical experience while also contributing to your community.By volunteering, individuals can gain a deeper understanding of community needs and become more empathetic towards others.Community service volunteering activities are a valuable way to give back to the community and make a positive impact on society. They provide individuals with opportunities to engage in meaningful work, develop new skills, build relationships, and gain a sense of personal fulfillment.\\n\\n### Few volunteering events:\\n\\n<ul><li>TechWorld</li>\\nThis is a flagship (activities which happens throughout the year) activity where we teach the underprivileged about electronic circuits and create awareness amongst them to pursue Engineering as a career, to mentor younger students for their bright future.</ul>\\n\\n<ul><li>Emergency</li>\\nThe main aim of conduction of this event is to make our budding Engineers well aware how to perform CPR and give first aid to someone in need.</ul>\\n\\n<ul><li>Beach Cleanup</li>\\nSuch events are conducted by keeping the welfare of the community and balance of ecosystem in mind. This could be possible only with the contribution of people who are genuinely interested in volunteering. Afterall,\\"If you concentrate on small, manageable steps you can cross unimaginable distances.\\"\\n</ul>\\n\\n\\n## 2. Space to Socialize\\n\\nJoining clubs and organizations is a great way to meet people who share your interests such as sports, music, etc. It is an amazing platform to meet new people and develop bonding. Remember, socializing in college can be challenging at first, but it\'s important to step out of your comfort zone and take advantage of opportunities to meet new people. Be yourself, have fun, and enjoy the college experience! We have fun Club Service (Avenue) Events which promotes students to know each other irrespective of their branches and to have fun together releasing the academic exhaustion aside.\\n\\n### Examples of such socializing events:\\n\\n  <div><ul>\\n  <li>Sunday Funday</li>\\n  <li>Treasure Hunt</li>\\n  <li>Movie Night</li>\\n  <li>Badminton Tournament</li>\\n  <li>Kick it!(Football Tournament)</li>\\n  </ul></div>\\n\\n\\n## 3. To express Creativity\\n\\nRotaract Club of TCET provides a cavity to students where they can express their artistic or literary talents. Members can explore different genres of writing, such as poetry, fiction, creative nonfiction, and screenwriting. They can also participate in writing prompts and exercises, which can help them generate new ideas and experiment with different writing styles. Students can showcase their work through public readings and publications. For our members possessing artistic talent, be it in the form of paper or digitalized form of art they can contribute by means of Digital Communication. They can learn, grow and experiment at the same time. For individuals who love to capture beautiful moments they can come forward and give their photography skills a boost. People who are good at branding they are welcomed as well where they can fully utilise their Social Media Marketing skills.\\n\\n\\n## 4. Development of Overall Personality\\n\\nParticipating in co-curricular activities can be extremely beneficial for your personal and professional development. Our club can help you learn about the business side of engineering and develop skills such as project management, leadership, and communication. We often organize events such as pitch competitions, guest speakers, and mentorship programs.\\n\\nWe conduct events wherein students learn how to develop Interpersonal Skills, they can participate in group activities, attend workshops and seminars on communication and collaboration, practice active listening, and seek feedback from peers and instructors. Building strong interpersonal skills takes time and effort, but it is a valuable investment for future success.\\n\\n\\n## 5. Last but not the least, it is a platform where you can create amazing memories!\\n\\n\\n![RCevent](RCevent.jpg)\\n>_\\"Education is not just about academics. It\'s about building character, improving one\'s personality, and becoming a better human being.\\"_ \\n>\\n>_- Sudha Murty_\\n\\n\\nJoining RCTCET can create can create amazing memories for students. It is a complete new experience where you can participate in different kinds of fun events. Opportunities to travel together, whether it\'s a weekend camping trip or a day trip to a nearby city the experience is wonderful. Volunteering for a social cause develops a sense of responsibility in young individuals. Competing with your peers gives you confidence to do better than before. Sharing same interests with someone new helps you create memorable experiences. College days are something a student cherishes for life and it is grateful to have a platform as such.\\n\\n\\n## To know more about us:\\n\\nVisit our [**Official Website**](https://www.rctcet.org/)\\nAnd do follow us [**@rc_tcet**](https://www.instagram.com/rc_tcet/?hl=en)\\n\\n\\n## Would like to conclude this blog\\n\\nRemember, co-curricular activities are meant to complement your academic studies. Make sure to balance your time and commitments so that you can excel both academically and personally. Don\'t be afraid to step out of your comfort zone and try something new. Joining a club as Rotaract Club of TCET can be a rewarding and fun experience that creates memories that last a lifetime. Moreover, social clubs can help promote social cohesion and strengthen community ties. They can offer a sense of belonging and provide a platform for individuals to come together and work towards common goals. In short, Rotaract Club of TCET can be a fun and enriching way to connect with others and build community. By joining this club, individuals can expand their horizons, create new friendships, and contribute to a more vibrant and inclusive society."},{"id":"dive-into-web-design","metadata":{"permalink":"/blog/dive-into-web-design","source":"@site/blog/2023-04-12-dive-into-web-design/index.md","title":"Dive into Web Design \ud83d\udd8c\ufe0f | Learn the Mental Model for converting Designs into Code","description":"Why React JS is the Future of Web Development","date":"2023-04-12T00:00:00.000Z","formattedDate":"April 12, 2023","tags":[{"label":"Web Design","permalink":"/blog/tags/web-design"},{"label":"HTML","permalink":"/blog/tags/html"},{"label":"CSS","permalink":"/blog/tags/css"},{"label":"Mental Model","permalink":"/blog/tags/mental-model"},{"label":"Resonsiveness","permalink":"/blog/tags/resonsiveness"}],"readingTime":9.205,"hasTruncateMarker":false,"authors":[{"name":"Jayesh Potlabattini","title":"Web Team Lead | Typescript Enthusiast | Full Stack Web Developer","url":"https://github.com/JayeshVP24","imageURL":"https://github.com/JayeshVP24.png","key":"jayesh"}],"frontMatter":{"slug":"dive-into-web-design","title":"Dive into Web Design \ud83d\udd8c\ufe0f | Learn the Mental Model for converting Designs into Code","authors":["jayesh"],"tags":["Web Design","HTML","CSS","Mental Model","Resonsiveness"],"description":"Why React JS is the Future of Web Development","keywords":["Web Design","HTML","CSS","Mental Model","Resonsiveness"]},"prevItem":{"title":"Rotaract Club of TCET","permalink":"/blog/rotaract-club-of-tcet"},"nextItem":{"title":"6 Reasons Why React JS is the Future of Web Development!!","permalink":"/blog/intro-to-react-js"}},"content":"Web designing (the HTML & CSS part, not the Figma Part) can be a real pain if we don\u2019t understand the design system/rules/procedure it uses. Even after watching HTML and CSS tutorials, we can still struggle to design anything in web. But, after having a decent **understanding of divisions** into **rows** and **columns** and learning about **display properties and positioning** in detail, you we can have some confidence to **turn any Figma design to HTML and CSS**. This is not a tutorial on HTML & CSS but a comprehensive usage of them. By reading this blog, I hope you can get the confidence and create the **Mental Model of Web Design in your Brain** \u2728\\n\\nThis Blog also serves as a very precise summary of long web design bootcamp I took with [**GenosisX Tech Community](https://twitter.com/genosis_x), [*watch here*](https://www.youtube.com/playlist?list=PLMSrWOO6hvLqdfCkNaQ1GhslVzvKygjU0)**\\n\\n> TL;DR: Create proper rows and columns for each block of design, put them into proper semantic tags or `<div>` tags. Use display flex or grid on them. Then style them properly with the fonts, colors, paddings, margins, borders, backgrounds. Position them properly with position property of CSS. Use responsive features of flex and grid. Done!\\n> \\n\\n## Prerequisite\\n\\n- Basic knowledge of HTML and CSS would help, but not necessary.\\n- That\u2019s It!\\n\\n# Guide to Divisions\\n\\nMaking proper divisions of design into rows and columns will help you style them better and will make it 100x easier to make them responsive. Let\u2019s get into it. \\n\\n## Visualize Design\\n\\n![Visualize Design #1](https://ik.imagekit.io/okaydokeymypath/blogs/deep-dive-into-web-design/visualize_divisions_1.gif)\\n\\nVisualize Design #1\\n\\n- First think of the separate sections, in this case, there are two, a Header and a Hero section.\\n- For every block of divisions, first think of sections as in one row or one column, then multiple columns or rows respectively.\\n- Divisions\\n    - Here, the whole page is one column which has two rows, Navbar and Hero.\\n    - Then we clearly see, hero is divided into two columns, so hero itself is one row which has two different distinct columns.\\n    - You can try to dig further deep into each div visually.\\n\\nSo based upon the divisions, we can conclude the following code.\\n\\n```html\\n<body> \x3c!-- First Column, whole page --\x3e\\n  <header></header> \x3c!-- First Row, Header --\x3e\\n  <main> \x3c!-- Second Row, Hero section --\x3e \\n\\t\\t<section></section> \x3c!-- First Column, Main Text Section--\x3e\\n\\t\\t<section></section> \x3c!-- Second Column, Main Image Section--\x3e\\n\\t</main>\\n</body>\\n```\\n\\n### Lets dig deep\\n\\n![Visualize Design #2](https://ik.imagekit.io/okaydokeymypath/blogs/deep-dive-into-web-design/visualize_divisions_2.gif)\\n\\nVisualize Design #2\\n\\n- Divisions - Header - a row\\n    - Img - Logo - First column\\n    - Navbar - Second column\\n    - Button - Third column\\n\\n```html\\n<body> \x3c!-- First Column, whole page --\x3e\\n  <header>\x3c!-- First Row, Header --\x3e\\n    <img src=\\"/..\\" /> \x3c!-- First column --\x3e\\n    <nav>bunch of <a></a> Tags</nav> \x3c!-- Second column --\x3e\\n    <button>Sign up</button> \x3c!-- Second column --\x3e\\n  </header> \\n  <main> \x3c!-- Second Row, Hero section --\x3e \\n\\t\\t<section></section> \x3c!-- First Column, Main Text Section--\x3e\\n\\t\\t<section></section> \x3c!-- Second Column, Main Image Section--\x3e\\n\\t</main>  \\n</body>\\n```\\n\\n> Use semantic tags wherever possible, they hold some meaning and are very important for SEO, read this article to learn more about them. [https://www.pluralsight.com/guides/semantic-html](https://www.pluralsight.com/guides/semantic-html)\\n> \\n\\n![Visualize Design #3](https://ik.imagekit.io/okaydokeymypath/blogs/deep-dive-into-web-design/visualize_divisions_3.gif)\\n\\nVisualize Design #3\\n\\n- Divisions - Main - a row\\n    - First Column of Hero Section\\n        - H1 - Main text - First row\\n        - p - Description text - Second row\\n        - span - Third Row having two buttons\\n            - Button - First Column\\n            - Button - Second Column\\n    - Second Column of Hero Section\\n        - img - First Column\\n\\n```html\\n<body> \x3c!-- First Column, whole page --\x3e\\n  <header>\x3c!-- First Row, Header --\x3e\\n    <img src=\\"/..\\" /> \x3c!-- First column --\x3e\\n    <nav>bunch of <a></a> Tags</nav> \x3c!-- Second column --\x3e\\n    <button>Sign up</button> \x3c!-- Second column --\x3e\\n  </header> \\n  <main> \x3c!-- Second Row, Hero section --\x3e \\n\\t\\t<section> \x3c!-- First Column, Main Text Section--\x3e\\n      <h1>Main text...</h1>\\n      <p>Description text...</p>\\n      <span>\\n        <button>Get Started</button>\\n        <button>Order Now</button>\\n      </span>\\n    </section> \\n\\t\\t<section> \x3c!-- Second Column, Main Image Section--\x3e\\n      <img src=\\"/..\\" />\\n    </section> \\n\\t</main>  \\n</body>\\n```\\n\\n# Guide to Style them\\n\\nPat yourself if you reached till here, and understood everything above! Lets go ahead.\\n\\nFor the next part, I\u2019ll use tailwindcss because it\u2019s easier to explain with. If you know CSS, you basically know tailwindcss. Read this article for a quick introduction, I hope you come back here after reading this. [https://tailwindcss.com/docs/utility-first](https://tailwindcss.com/docs/utility-first)\\n\\n## Step-by-Step Linear Process to Design Anything!\\n\\nRemember, this is not a hard and fast rule to follow exactly as is. You can add you own flavours to this. Skip steps which are not required. I made this using my personal experience so add modify it if I missed anything. \\n\\n1. Write HTML, using the divisions approach\\n2. Set background color\\n3. Set display - flex (if any child tags)\\n4. Set width - compulsory\\n5. Set height - optional\\n6. set overflow properties\\n7. Set font \u2192 size, weight, line height, letter spacing, \\n8. Set text colors \u2192 paddings \u2192 borders \u2192 margins \\n    1. Colors - normal, hover, active any states\\n    2. Borders - width/thickness , color, radius, style\\n9. Set position (if want to move the element from its position)\\n    1. relative - move it from its current position\\n    2. absolute - move it from its **first relative parent** start point (top-0, left-0 of relative parent)\\n    3. fixed - move it from windows start point (top-0, left-0 of whole window)\\n10. Set z-index - define stack, which element should be above which\\n11. Anything else that suits your design\\n\\nThis is a linear process, which means you first style the first tag then the second tag then the third tag then the next tag then the next tag and so on!\\n\\n```html\\n<body> \x3c!-- First style this #1 --\x3e\\n  <header>\x3c!-- then this #2 --\x3e\\n    <img src=\\"/..\\" /> \x3c!-- Then this #3 --\x3e\\n    <nav> \x3c!-- Then this #4 --\x3e\\n      <a>..</a> \x3c!-- Then this #5 --\x3e\\n      <a>..</a> \x3c!-- Then this #6 --\x3e\\n      <a>..</a> \x3c!-- Then this #7 --\x3e\\n    </nav> \x3c!-- and so on till the last tag --\x3e\\n    <button>Sign up</button> \\n  </header> \\n  <main> \\n    <section> \\n      <h1>Main text...</h1>\\n      <p>Description text...</p>\\n      <span>\\n        <button>Get Started</button>\\n        <button>Order Now</button>\\n      </span>\\n    </section> \\n\\t\\t<section> \\n      <img src=\\"/..\\" />\\n    </section>\\n</body>\\n```\\n\\n## Here comes the CSS\\n\\n![Web Design Bootcamp Design](https://ik.imagekit.io/okaydokeymypath/blogs/deep-dive-into-web-design/web_design.png)\\n\\nWeb Design Bootcamp Design\\n\\nTake a quick look, and we will start with the linear process\\n\\n### Body - main page\\n\\nWe can see that the \\n\\n- background color is different\\n- width is full screen\\n- padding left and right i.e x-axis\\n\\n```html\\n<body class=\\"bg-[#f3f3f3] w-[100vw] px-16 \\" > \x3c!-- First Column, whole page --\x3e\\n  <header  >\x3c!-- First Row, Header --\x3e\\n    <img src=\\"/..\\" /> \x3c!-- First column --\x3e\\n\\t\\t\\t...\\n```\\n\\n### Header\\n\\nHere,\\n\\n- We see, everything is in one row, so set display as flex\\n- width is full available space so 100%\\n- img - logo\\n    - width of some pixels\\n- navbar\\n    - width of fit content (automatic)\\n    - font weight is medium i.e 500\\n    - Color is gray for all but black for current one\\n- button\\n    - background is orange\\n    - text is bold\\n    - longer padding in x-axis, shorted padding in y-axis\\n    - border radius full rounded\\n\\n```html\\n<body class=\\"bg-[#f3f3f3] w-[100vw] px-20 \\" > \x3c!-- First Column, whole page --\x3e\\n  <header class=\\"flex w-full\\" >\x3c!-- First Row, Header --\x3e\\n    <img class=\\"w-20\\" src=\\"/..\\" /> \x3c!-- First column --\x3e\\n    <nav class=\\"flex w-fit text-[#828282] font-medium\\" >\\n      <a id=\\"current\\" class=\\"text-black\\" >Home</a>\\n       \x3c!-- if id=\\"current\\" then class=\\"text-black\\" add this login using javascript  --\x3e\\n      <a>How it works</a>\\n      ...\\n    </nav> \x3c!-- Second column --\x3e\\n    <button class=\\"bg-[#FF6F1E] w-fit text-white px-4 py-2 rounded-full\\" >Sign up</button> \x3c!-- Second column --\x3e\\n  </header>\\n\\t ...\\n```\\n\\nWe won\u2019t do the whole design, but this will give you enough idea on how we go about designing and how to follow the linear process which may seem overwhelming but is really easy to follow.\\n\\n## Responsiveness, how easy is it?\\n\\n### Desktop First Design Approach\\n\\n- First we design the desktop version of our web app\\n- Then slowly add rules to make it responsive for tablets then mobile\\n- Desktop \u2192 Tablet \u2192 Mobile\\n- This is not recommended\\n\\n### Mobile First Design Approach\\n\\n- First we design the mobile version of our web app\\n- Then slowly add rules to make it responsive for tablets then desktop\\n- Mobile \u2192 Tablet \u2192 Desktop\\n- This is most recommended and used by tailwindcss by default\\n\\n### No media query methods\\n\\n- Set max-widths and min-widths\\n- Use display flex with flex-wrap, flex-grow, flex-shrink, flex-basis\\n- Use display grid with grid-template-columns, repeat - autofit, minmax\\n- You can much deeper with maths to avoid media queries but I feel that much is unnecessary.\\n- Using some media queries to avoid extreme complexity is always a good idea\\n\\n### A good example of minimum media queries\\n\\n************The prefix **lg:** is how we use media queries in tailwindcss, refer this* [https://tailwindcss.com/docs/responsive-design](https://tailwindcss.com/docs/responsive-design)\\n\\n```html\\n<main class=\\"flex flex-wrap text-lg lg:text-xl m-5 lg:m-10\\" > \x3c!-- Second Row, Hero section --\x3e \\n\\t\\t<section class=\\"max-w-lg\\" > \x3c!-- First Column, Main Text Section--\x3e\\n      ...\\n    </section> \\n\\t\\t<section class=\\"max-w-lg\\" > \x3c!-- Second Column, Main Image Section--\x3e\\n      ...\\n    </section> \\n</main>\\n```\\n\\n## Get Creative with Positioning\\n\\nWhen we want to move some elements from their original position to something else, we use position property.\\n\\n### CSS Positions\\n\\n- Static\\n    - Default value\\n    - Original position, cannot change it.\\n- Relative\\n    - Set explicitly\\n    - Can change position from original using properties - top, left, bottom, right\\n    - Moves towards the specified direction from its current position.\\n- Absolute\\n    - Set explicitly\\n    - Can change position from original using properties - top, left, bottom, right\\n    - Move towards the specified direction from the **first relative parents** start coordinates.\\n- Fixed\\n    - Set explicitly\\n    - Can change position from original using properties - top, left, bottom, right\\n    - Move towards the specified direction from the coordinates of **window (browser tab)** itself\\n    - Does not move on scroll, stays fixed.\\n\\n> This article by MDN teaches all positionings perfectly.\\n[https://developer.mozilla.org/en-US/docs/Web/CSS/position](https://developer.mozilla.org/en-US/docs/Web/CSS/position)\\n> \\n\\n### An example of positioning\\n\\nLets look at the image which has blocks of elements floating above it.\\n\\n![Pizza Design](https://ik.imagekit.io/okaydokeymypath/blogs/deep-dive-into-web-design/pizza_design.png)\\n\\n- So the concept is we wrap the image in one div\\n- This div will be set to position: relative\\n- This div will contain image tag and other elements of those floating blocks\\n- Don\u2019t change image tag position\\n- Change position: absolute of all floating elements\\n- Then set them to their places via top, left, right, bottom\\n\\n```html\\n<section class=\\"relative\\" > \x3c!-- Second Column, Main Image Section--\x3e\\n\\t\\t<img class=\\"w-24 h-40\\"  src=\\"/..\\" />\\n\\t\\t<div class=\\"absolute top-[30%] right-[-10%]\\" >...</div>\\n\\t\\t<div class=\\"absolute top-[50%] left-[-10%]\\" >...</div>\\n\\t\\t<div class=\\"absolute bottom-[-15%] right-[12%]\\" >...</div>\\n</section>\\n```\\n\\n# Conclusion\\n\\n- Make proper divisions while writing the whole HTML. Visualize and then create rows and columns.\\n- Write whole HTML of one section then style the whole section using the step by step linear process.\\n- Position properly and most of it depends on the parents element position property, so make sure you set those correct.\\n- Learn flex, grid and positions of CSS very thoroughly.\\n- Learn tailwindcss because it will make your life easier, trust me on this."},{"id":"intro-to-react-js","metadata":{"permalink":"/blog/intro-to-react-js","source":"@site/blog/2023-04-10-intro-to-react-js/index.md","title":"6 Reasons Why React JS is the Future of Web Development!!","description":"Why React JS is the Future of Web Development","date":"2023-04-10T00:00:00.000Z","formattedDate":"April 10, 2023","tags":[{"label":"ReactJs","permalink":"/blog/tags/react-js"},{"label":"JSX","permalink":"/blog/tags/jsx"},{"label":"Virtaul DOM","permalink":"/blog/tags/virtaul-dom"},{"label":"Frontend","permalink":"/blog/tags/frontend"}],"readingTime":4.535,"hasTruncateMarker":false,"authors":[{"name":"Mahima Churi","title":"UI/UX Team Member | Full Stack Web Developer","url":"https://github.com/Mahitej28","imageURL":"https://github.com/Mahitej28.png","key":"mahima"}],"frontMatter":{"slug":"intro-to-react-js","title":"6 Reasons Why React JS is the Future of Web Development!!","authors":["mahima"],"tags":["ReactJs","JSX","Virtaul DOM","Frontend"],"description":"Why React JS is the Future of Web Development","keywords":["ReactJs","JSX","Virtaul DOM","Frontend"]},"prevItem":{"title":"Dive into Web Design \ud83d\udd8c\ufe0f | Learn the Mental Model for converting Designs into Code","permalink":"/blog/dive-into-web-design"},"nextItem":{"title":"Cloud Computing: Revolutionizing the Way We Store and\xa0Access\xa0Data","permalink":"/blog/intro-to-cloud-computing"}},"content":"><b>As</b> technology continues to evolve, web development has become an increasingly important field, and front-end frameworks such as ReactJS have emerged as crucial tools for building dynamic, user-friendly websites. Whether you are just starting out with web development or are looking to enhance your existing skills, I hope that you will find valuable insights and tips within these pages.\\nSo sit back, grab a cup of coffee, and join me on our journey through the exciting world of ReactJS!\\n\\n<br />\\n\\n| ![\u201cDesign is not just what it looks like and feels like. Design is how it works.\u201d \u2014 Steve Jobs](reactjs.png) |\\n| :--: |\\n| *\u201cDesign is not just what it looks like and feels like. Design is how it works.\u201d \u2014 Steve Jobs* |\\n\\n<br/>\\n\\n# What is React JS?\\n\\nReact JS is nothing but a java script library that helps the developers in creating reusable UI components there by increasing the efficiency of code. When making dynamic websites React JS is proven to be more effective than Vanilla JS, and hence it has become a popular choice for building fast and scalable single-page applications. In simple terms, ReactJS helps make web development more efficient, organized, and dynamic.\\n\\n# Characteristic Features of React JS that makes it more versatile and Popular\\n\\n| ![Features of ReactJS](characteristics.png) |\\n| :--: |\\n| *Features of ReactJS* |\\n\\n## 1. Virtual DOM\\n\\nIn traditional web development, when changes are made to a web page, the entire page needs to be re-rendered, which can be slow and time-consuming. The Virtual DOM solves this issue by creating a virtual representation of the web page in memory so when changes are made, ReactJS updates the virtual DOM instead of the actual page, which is much faster. Then, ReactJS compares the virtual DOM to the actual page and updates only the parts that have changed, rather than the entire page. This makes the updates and rendering process much faster and more efficient, improving the overall user experience of the web application.\\n\\n## 2. Reusable Components\\n\\nReactJS uses a component-based architecture, which means that the user interface is built using reusable components. Each component is a self-contained unit that handles a specific task or displays a specific piece of information, we can say that each components are independent. This makes the code more organized and easier to maintain, as well as reducing the amount of redundant code.\\n\\n## 3. Community\\n\\nReact has a vast and supportive community of developers who are constantly contributing new features and tools. React is open-source, meaning that anyone can contribute to the development of the library by fixing bugs, adding new features, or improving existing ones.\\n\\n>[*Link to contribute to the React Library*](https://github.com/facebook/react)\\n\\n## 4. JSX\\n\\nJSX stands for JavaScript XML. It is a syntax extension for JavaScript used by ReactJS that allows developers to write HTML-like code within their JavaScript. This makes it easier for users to write and understand the code, as it closely resembles the structure of HTML. This helps to improve the overall development experience by making the code more intuitive and easier to read.\\n\\nFor example, instead of writing the following code in pure JavaScript to render a simple button:\\n\\n```js \\nReact.createElement(\\"button\\", {className: \\"myButton\\"}, \\"Click Me!\\");\\n```\\n\\nThe same code can be written in JSX as:\\n\\n```jsx\\n<button className=\\"myButton\\">Click Me!</button>; \\n```\\n\\n## 5. Server-side Rendering\\n\\nServer-side rendering (SSR) is the process of rendering a web page on the server before sending it to the browser. In the case of React, this means that the React components can be rendered on the server, allowing the browser to receive a fully rendered HTML page, instead of having to wait for JavaScript to execute and render the page on the client side again and again.\\n\\nThis results in faster initial load times, as the browser doesn\u2019t have to wait for the JavaScript to execute and render the page. Additionally, server-side rendering can improve Search Engine Optimization (SEO), as search engines can better index and understand the content of the page.\\n\\n## 6. Compatibility\\n\\nReact\u2019s simplicity and straightforward design makes it easy for developers to learn and adopt and it works seamlessly with other libraries and frameworks, such as Redux, allowing developers to create complex and scalable web applications.\\n\\n# Comaprison with other Frontend Frameworks\\n\\n| ![Popular Web Frameworks](chart1.png) |\\n| :--: |\\n| *Comparison with other frameworks as per the recent survey* |\\n\\n>Source: Stack Overflow Developer Survey 2021\\n\\nFrom the above survey it can be clearly seen that React JS was named as one on the most commonly used web Framework.\\n\\nReact\u2019s virtual DOM provides fast updates and rendering compared to traditional DOM manipulation. Angular and Vue also have optimized updates, but they may not be as fast as React\u2019s virtual DOM.\\n\\nAlso, React is known for its simplicity and minimalistic approach, making it relatively easy to learn and get started with. Angular, on the other hand, has a steeper learning curve due to its more complex architecture. Vue falls somewhere in between, offering a more accessible learning experience as compared to Angular.\\n\\n:::info \\n\\nYou can see more detailed insights of React JS on their [**Official Website**](https://reactjs.org/)\\n\\n:::\\n\\n## Conclusion\\n\\nIn conclusion, React is the future of web development, offering a robust set of features and tools that make it easy to build high-performing, scalable, and maintainable web applications. Its simplicity, performance, and compatibility with other technologies make it an excellent choice for modern web development."},{"id":"intro-to-cloud-computing","metadata":{"permalink":"/blog/intro-to-cloud-computing","source":"@site/blog/2023-04-09-intro-to-cloud-computing/index.md","title":"Cloud Computing: Revolutionizing the Way We Store and\xa0Access\xa0Data","description":"Cloud Computing: Revolutionizing the Way We Store and\xa0Access\xa0Data","date":"2023-04-09T00:00:00.000Z","formattedDate":"April 9, 2023","tags":[{"label":"cloud computing","permalink":"/blog/tags/cloud-computing"},{"label":"data","permalink":"/blog/tags/data"},{"label":"source","permalink":"/blog/tags/source"},{"label":"software","permalink":"/blog/tags/software"}],"readingTime":5.505,"hasTruncateMarker":false,"authors":[{"name":"Himanshu Agarwal","title":"Docs Team Member | 2x Kaggle Expert | Software Developer | Data Analyst","url":"https://github.com/himanshu-03","imageURL":"https://github.com/himanshu-03.png","key":"himanshu"},{"name":"Mahima Churi","title":"UI/UX Team Member | Full Stack Web Developer","url":"https://github.com/Mahitej28","imageURL":"https://github.com/Mahitej28.png","key":"mahima"}],"frontMatter":{"slug":"intro-to-cloud-computing","title":"Cloud Computing: Revolutionizing the Way We Store and\xa0Access\xa0Data","authors":["himanshu","mahima"],"tags":["cloud computing","data","source","software"],"description":"Cloud Computing: Revolutionizing the Way We Store and\xa0Access\xa0Data","keywords":["cloud computing","data","source","software"]},"prevItem":{"title":"6 Reasons Why React JS is the Future of Web Development!!","permalink":"/blog/intro-to-react-js"},"nextItem":{"title":"Breaking The Ice - Open Source","permalink":"/blog/breaking-the-ice-open-source"}},"content":"> This Blog talks about the emerging trends in Cloud computing, and also gives a gist about the term Cloud Computing and its impact in leveraging businesses and individuals. The cloud has the ability to streamline and improve a variety of processes. From understanding the meaning of cloud computing model to discussing various characteristics, this blog will be your one-stop-shop for all things cloud computing. So, fasten your seatbelts and let\'s dive into the exciting world of the cloud together!!\\n\\n<br />\\n\\n# What is Cloud Computing ?  \\n\\nCloud computing is a way of using current technology where we can access and use internet-based services and storage to manage, process, and store data and information, instead of having to have it all on your own personal device or computer. \\n\\nWe can think of it like having access to a giant computer in the sky that we can use to do our work, store our files, and run our applications, without having to worry about the technical details or maintenance of the underlying hardware and software. This makes it easier and more convenient for us to access our data and resources from anywhere in the world, as long as we have an internet connection.\\n\\n\\n## Let\'s take a look at some intriguing features of Cloud Computing!!\\n<br />\\n\\n<details>\\n<summary><b>\ud83d\udee0\ufe0f On-Demand Self-Service</b></summary>\\n<div>\\n\\nWith cloud computing, we can provision computing services, like server time and network storage, automatically. No communication with the service provider will be necessary. Customers of cloud services can view their cloud services, track their usage, and provision and de-provision services by logging into their cloud accounts through a web self-service portal.\\n\\n</div>\\n</details>\\n\\n<details>\\n<summary>\\n<b>\ud83d\udcbb Broad Network Access</b>\\n</summary>\\n<div>\\n\\nBroad network connectivity is another crucial aspect of cloud computing. Through a network and on portable devices like smartphones, tablets, laptops, and desktop PCs, we can access cloud services. A private cloud employs a local area network, whereas a public cloud uses the internet. Broad network access and cloud computing both rely heavily on latency and bandwidth since they have an impact on service quality.\\n\\n</div>\\n</details>\\n\\n<details>\\n<summary>\\n<b>\ud83d\udcdd Resource Pooling</b>\\n</summary>\\n<div>\\n\\nWith resource pooling, multiple customers can share physical resources using a multi-tenant model. Based on demand, this model distributes and redistributes real and virtual resources. Customers can share the same applications or infrastructure with multi-tenancy while still retaining their privacy and security. Customers may be able to designate the location of their resources at a higher level of abstraction, such as a country, state, or data centre, even though they won\'t know the precise location of their resources. Customers can pool a variety of resources, including memory, computing power, and bandwidth.\\n\\n</div>\\n</details>\\n\\n<details>\\n<summary>\\n<b>\ud83d\udd17 Rapid Elasticity</b>\\n</summary>\\n<div>\\n\\nCloud services can be elastically provisioned and released, sometimes automatically, so customers can scale quickly based on demand, thus making it highly scalable. The capabilities available for provisioning are practically unlimited. Customers can use these features whenever they want and in whatever amount. Customers can scale cloud capacity, cost, and usage without incurring additional contracts or charges. We won\'t need to acquire computer hardware thanks to quick elasticity. \\n\\n</div>\\n</details>\\n\\n<details>\\n<summary>\\n<b>\u2699\ufe0f Measured Service</b>\\n</summary>\\n<div>\\n\\nA metering capability in cloud systems optimises resource utilisation at an abstraction level appropriate for the type of service. For storage, processing, bandwidth, and users, for instance, we can utilise a metered service. A pay-for-what-you-use model is used to base payments on the customer\'s actual consumption. Consumers and service providers benefit from a transparent experience that is created by monitoring, managing, and reporting resource use.\\n\\n</div>\\n</details>\\n\\n\\n## Lets have a look at some of the most used Cloud Storage Services\\n<br />\\n\\n| ![Most Used Cloud Storage Services](most-used-cloud-storage-services.png) |\\n| :--: |\\n| *Most used Cloud Storage Services* |\\n\\nGoogle Drive is by far the most popular cloud storage service in the world, with an use rate of **94.44 percent**. The finest cloud storage for collaboration, Dropbox, is in second position with a still-impressive **66.2 percent**, followed by [**OneDrive**](https://www.microsoft.com/en-in/microsoft-365/onedrive/online-cloud-storage) **(39.35 percent)** and [**iCloud**](https://www.icloud.com/) **(38.89 percent)**. Additionally popular cloud storage providers include [**MEGA**](https://mega.io/) **(5.09 percent)**, [**Box**](https://www.box.com/) **(4.17 percent)**, and [**pCloud**](https://www.pcloud.com/) **(1.39%)**, all of which made our list of the top cloud storage services.\\n\\n\\n\\n## Statistics on Cloud Service Providers\\n<br />\\n\\n| ![Stats on Cloud Service Providers](cloud-provider-market-share-trend.jpg) |\\n| :--: |\\n| *Stats on Cloud Service Providers* |\\n\\nAWS still holds over a third of the cloud services market:\\n\\n- In Q2 2022, [**AWS**](https://aws.amazon.com/) commanded **34%** of the cloud market, a **1%** increase year-over-year. [**Azure**](https://azure.microsoft.com/en-in) is second with **21%** of the market, followed by [**Google Cloud**](https://cloud.google.com/) **(10%)**, [**Alibaba**](https://in.alibabacloud.com/en) **(5%)**, and [**IBM**](https://www.ibm.com/cloud) **(4%)**.\\n- Amazon\'s revenue from AWS grew from **5.62** in 2014 to **13.24%** in 2021.\\n- The survey also showed the cloud market continues to grow **34%** year-over-year.\\n\\n:::tip FunFact\\n\\nIt took Netflix seven years to migrate to AWS\\n\\n:::\\n\\n## Some drawbacks to have a look upon\\n<br />\\n\\n| ![Drawbacks of Cloud Computing](drawback.jpg) |\\n| :--: |\\n| *Drawbacks of Cloud Computing* |\\n\\nAccording to cybersecurity experts, the most pressing cloud security challenges are misconfiguration of the cloud infrastructure **(68 percent)**; unauthorized access **(58 percent)**; insecure API **(52 percent)**; accounts, services or traffic hijacking **(50 percent)** and external data sharing **(43 percent)**.\\n\\n:::info \\n\\nIf you are interested in finding out more about cloud security, we have an [excellent article detailing cloud security measures](https://www.cloudwards.net/cloud-security/) for cloud storage services.\\n\\n:::\\n\\n## Conclusion\\n\\n- In conclusion, cloud computing has become an increasingly popular and indispensable tool for businesses and organizations of all sizes. With its ability to provide on-demand access to a wide range of computing resources, including storage, computing power, and applications, it has transformed the way organizations operate and has unlocked new opportunities for innovation and growth.\\n- The cloud offers many benefits, including cost savings, scalability, increased efficiency, and improved security. As more and more businesses adopt cloud computing, it is likely that this trend will continue to grow, driving further innovation and enabling organizations to do more with less.\\n- However, while the benefits of cloud computing are clear, there are also challenges that must be addressed, such as ensuring data security, managing vendor lock-in, and ensuring reliable performance.\\n- Despite these challenges, the future of cloud computing looks bright, with advancements in areas such as artificial intelligence, machine learning, and the Internet of Things set to further drive its growth and revolutionize the way businesses operate.\\n\\nIn short, cloud computing is here to stay, and its impact on the business world will only continue to grow in the years to come."},{"id":"breaking-the-ice-open-source","metadata":{"permalink":"/blog/breaking-the-ice-open-source","source":"@site/blog/2023-04-07-opensource/index.md","title":"Breaking The Ice - Open Source","description":"Breaking The Ice - Open Source","date":"2023-04-07T00:00:00.000Z","formattedDate":"April 7, 2023","tags":[{"label":"free","permalink":"/blog/tags/free"},{"label":"open","permalink":"/blog/tags/open"},{"label":"source","permalink":"/blog/tags/source"},{"label":"software","permalink":"/blog/tags/software"}],"readingTime":3.415,"hasTruncateMarker":false,"authors":[{"name":"Vishal Rawat","title":"Co-creator TCET Open Source, Docs Team Lead","url":"https://github.com/vish-rt","imageURL":"https://github.com/vish-rt.png","key":"vishal"}],"frontMatter":{"slug":"breaking-the-ice-open-source","title":"Breaking The Ice - Open Source","authors":["vishal"],"tags":["free","open","source","software"],"description":"Breaking The Ice - Open Source","keywords":["free","open","source","software"]},"prevItem":{"title":"Cloud Computing: Revolutionizing the Way We Store and\xa0Access\xa0Data","permalink":"/blog/intro-to-cloud-computing"},"nextItem":{"title":"First Blog - General Posting Guidelines","permalink":"/blog/first-blog-guidelines"}},"content":"Project management is a wild way to make sure things are progressing as they should. There is a project management technique for everything. Well, almost everything. I haven\'t found a project managing concept to overcome my feelings of procrastination. Someone might create it one day.\\n\\n## What really _is_ Open Source?\\n\\nIf you\'re the engineering type of person that tackles humanity\'s problems and urgent needs by bringing together an entire community and building a \\"project\\" with them, you\'ll want to know about **Open source**. Open source refers to a philosophy of software development that emphasizes collaboration, transparency, and community-driven innovation. \\n\\nHere it is again in bigger letters, for impact:\\n\\n> ### Open source refers to a philosophy of software development that emphasizes collaboration, transparency, and community-driven innovation.\\n\\nAnd now you know what open source is. _In theory, this blog post could be done!_\\n\\n---\\n\\n### Beyond the marketing standpoint\\n\\nTechnology is a concept which is ever-changing in how it is defined, its magnitude and how we as engineers develop it. In the world of technology we always find \\"buzz words\\" which reflect the recent advancements which are so efficient that they are slowly brought within the industry as a standard way of working on projects, as a team.\\n\\nOne such \\"buzz word\\" in the area of software development and project management is open source. Open source is a way of working on a software typically developed in a public, collaborative manner, with the source code made freely available to anyone who wants to use, modify, or distribute it. The term \\"open source\\" was coined in 1998 by a group of people in the software industry who wanted to create a new model of software development that was more collaborative and community-driven.\\n\\nOpen source software is often developed and maintained by a community of volunteers and contributors, who work together to improve the software and fix bugs. Consider your **homework**: a dry document which contains things here and there which you know is very incomplete. If you have a good enough personality _(which I don\'t)_, you send this document to all your classmates who start doing bits of your homework.\\n\\n_The result?_ A fine specimen of a document which the entire class can show to your teachers for great marks! What you just did here was open sourcing your homework and let your student community work on it to create a more appealing document which is now complete.\\n\\n### But open source doesn\'t stop there\\n\\nImagine your homework to be your project, your classmates to be your community. This community observes your project and suggests various improvements within it. Be it suggesting simple changes of changing the fonts or re-working the already existing complex APIs and queries.\\n\\n| ![Example of suggestions](meme.jpg) |\\n|:--:|\\n| *A simple conversation between a contributor and a project developer* |\\n\\nAnother way to look at open source can be building the big **Lego City** together, block by block. Everyone can add their own pieces to what has been constructed so far and everyone can see how the city is made. In this way, everyone can make the city better and use it how they want.\\n\\n| ![Software Engineers](budding.jpg) |\\n|:--:|\\n| *Budding software engineers collaborating to build their project* |\\n\\nOpen source is a great way to bring like-minded developers together. Everybody around you, be a fresher student or an industry experienced individual, has had to encounter with open source technologies without even realizing it. From something we daily use like **Android** to **Linux**: the operating system used by many corporates and tech giants, there\'s no saying what the next big thing will be.\\n\\n| ![Open Source](open.jpg) |\\n|:--:|\\n| *Python, Dart, React, MongoDB, even this text box is open source* |\\n\\nThat\'s about the gist of what I wished to express regarding open source. Surely that\'s not everything but I do look forward to go in-depth into this topic and talk about various different things which excite me! Do look forward to upcoming blogposts and reach me out for any constructive criticism, if any, for the future blogposts."},{"id":"first-blog-guidelines","metadata":{"permalink":"/blog/first-blog-guidelines","source":"@site/blog/2023-04-01-blog-guidlines/index.md","title":"First Blog - General Posting Guidelines","description":"First Blog - General Posting Guidelines","date":"2023-04-01T00:00:00.000Z","formattedDate":"April 1, 2023","tags":[{"label":"free","permalink":"/blog/tags/free"},{"label":"open","permalink":"/blog/tags/open"},{"label":"source","permalink":"/blog/tags/source"},{"label":"software","permalink":"/blog/tags/software"}],"readingTime":3.225,"hasTruncateMarker":false,"authors":[{"name":"Gaurang Vishwakarma","title":"Creator of TCET Open Source, DevOps Lead","url":"https://github.com/demonkillerr","imageURL":"https://github.com/demonkillerr.png","key":"gaurang"},{"name":"Vishal Rawat","title":"Co-creator TCET Open Source, Docs Team Lead","url":"https://github.com/vish-rt","imageURL":"https://github.com/vish-rt.png","key":"vishal"}],"frontMatter":{"slug":"first-blog-guidelines","title":"First Blog - General Posting Guidelines","authors":["gaurang","vishal"],"tags":["free","open","source","software"],"description":"First Blog - General Posting Guidelines","keywords":["free","open","source","software"]},"prevItem":{"title":"Breaking The Ice - Open Source","permalink":"/blog/breaking-the-ice-open-source"}},"content":"## Welcome to our first blog\\n\\nWelcome everyone to TCET Open Source\'s Blog Section. Here, we promote blogging in the student community. Talk about ongoing trends in tech, student life at TCET, and any topic you feel would feel great for this blog.\\n\\n:::note\\n\\nThis particular blog will have recurring adjustments.\\n\\n:::\\n\\n## General Blog Guidlines\\n\\nHere we define all the basic guidlines a blog should follow in TCET Open Source Blogs.\\n\\n### Clone the project\\n\\nFor being able to contribute anywhere, one must be able to clone and run projects. You can visit this [tutorial](https://opensource.tcetmumbai.in/docs/projects/docs-site/getting-started) to learn how to work on this project.\\n\\n### Basic GitHub commands\\n\\nFor any contributor it is very necessary to understand basic GitHub commands to begin with. There is a _resources forum_ on **TCET - Open Source Discord server** where you can find relevant references for the same. There can also be a blog post regarding these commands in the future!\\n\\n### Understand file structure\\n\\nOnce you have cloned the project in your local storage, you will need to perform the following:\\n\\n1. Open the project directory and navigate to `blog/`.\\n2. Create a folder for your blog post.\\n* The folder should have the following name format:\\n```sh\\nyyyy-mm-dd-blog-title\\n```\\n* Here, the date stands for the date when the post is supposed to be released. The blog title should be relevant to the content within the post.\\n3. Within the folder, create `index.md`. This file will serve as a text document where you can format your content which will reflect in the final post.\\n\\n### Understand markdown files and syntax\\n\\nMarkdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents. The `index.md` file created in your blog folder is a markdown file, similar to how _index.html_ can be an HTML file. It is very essential for a blog contributor to understand the basic syntax of markdown. _Resource forum_ in our **Discord server** covers basic syntax of these files.\\n\\n### First steps\\n\\nBefore moving any further, a blogger must know the following:\\n\\n> - `slug` - It is the last part of the URL address that serves as a unique identifier of the blog post.\\n> - `title` - The main title of the blog post. Note that the blog title should be relevant to the content within the post.\\n> - `authors` - The list of authors who have worked on the blog post. Authors can be added by editing the `authors.yml` file.\\n> - `tags` - It highlights the key words of the post to boost it\'s visibility on the internet and improve the SEO.\\n\\nThese four information are necessary to be present in every post. Without these, no posts will be approved and merged within the blog.\\n\\n### Adding images\\n\\nTired of good ol\' _textbook nerdy_ look on your post? Introducing: **images**. Images are a great way to keep the reader\'s attention to your posts, and now you can do that very easily:\\n1. The image must be present within your blog folder. If it isn\'t, save the image in your blog folder.\\n2. To add the image within your post, use the following syntax:\\n```sh\\n![Alt text](image.png)\\n```\\n* Here, `image.png` stands for the name of the image you have in the blog directory. Markdown supports a great amount of image formats, ranging from png, jpg, svg, and even gifs.\\n\\n:::note\\nIs gif pronounced _gif_ or _jif_? Something to ponder upon.\\n:::\\n\\n### Congratulations\\n\\nFollowing these steps and points, you will be able to create a beautiful blog post. It\'s final structure would look something like this:\\n\\n![Alt text](structure.png)\\n\\n_With a fresh blog post ready, you can now finally create a pull request to reflect your post on our blog here!_\\n\\nLooking forward to new content from you all. Have fun and go contribute something great!"}]}')}}]);